#version 430
//in vec2 texCoord;
layout(location=0) in vec3 normal;
layout(location=1) in vec3 worldPos;

out vec4 Color;

//uniform sampler2D texColor;
uniform vec3 lightColor;
uniform vec3 lightPos;

void main()
{
	//ambient lighting
	float ambientStrength = 0.4;
	vec3 objectColor = vec3(0.4f, 0.4f, 0.4f);
	vec3 ambient = ambientStrength * lightColor;

	//diffuse lighting
	vec3 Normal = normalize(normal);
	vec3 lightDir = normalize(lightPos - worldPos);
	float dotDiffuse = max(dot(Normal, lightDir), 0.0);
	vec3 diffuse = dotDiffuse * lightColor;


	vec3 result = (ambient + diffuse) * objectColor;
	Color = vec4(result, 1.0f);
}